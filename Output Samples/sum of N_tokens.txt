--- Lexical Analysis of: sum of N.txt ---
--------------------------------------------------
Source Program Content:
{ Sample program in TINY language – computes sum of integers 1-N}
     read N;   {input an integer }
     if  0 < N   then     {  don’t compute if x <= 0 }
        sum  := 0;
	i    := 0;
     sum  := 0;
     i    := 0;
        repeat 
           sum := sum + i
            i  := i   + 1
        until  i  =  N + 1
        write  sum   {  output  sum of N }
     end  

--------------------------------------------------

--- Token Stream ---
Type: READ         Value: read
Type: IDENTIFIER   Value: n
Type: SEMICOLON    Value: ;
Type: IF           Value: if
Type: NUMBER       Value: 0
Type: LESSTHAN     Value: <
Type: IDENTIFIER   Value: n
Type: THEN         Value: then
Type: IDENTIFIER   Value: sum
Type: ASSIGN       Value: :=
Type: NUMBER       Value: 0
Type: SEMICOLON    Value: ;
Type: IDENTIFIER   Value: i
Type: ASSIGN       Value: :=
Type: NUMBER       Value: 0
Type: SEMICOLON    Value: ;
Type: IDENTIFIER   Value: sum
Type: ASSIGN       Value: :=
Type: NUMBER       Value: 0
Type: SEMICOLON    Value: ;
Type: IDENTIFIER   Value: i
Type: ASSIGN       Value: :=
Type: NUMBER       Value: 0
Type: SEMICOLON    Value: ;
Type: REPEAT       Value: repeat
Type: IDENTIFIER   Value: sum
Type: ASSIGN       Value: :=
Type: IDENTIFIER   Value: sum
Type: PLUS         Value: +
Type: IDENTIFIER   Value: i
Type: IDENTIFIER   Value: i
Type: ASSIGN       Value: :=
Type: IDENTIFIER   Value: i
Type: PLUS         Value: +
Type: NUMBER       Value: 1
Type: UNTIL        Value: until
Type: IDENTIFIER   Value: i
Type: EQUAL        Value: =
Type: IDENTIFIER   Value: n
Type: PLUS         Value: +
Type: NUMBER       Value: 1
Type: WRITE        Value: write
Type: IDENTIFIER   Value: sum
Type: END          Value: end
